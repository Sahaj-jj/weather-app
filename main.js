(()=>{"use strict";const e=async e=>{const t=await fetch((n=e,`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=0b94a86a7ab72879839de5a724686c9f`),{mode:"cors"});var n;if(!t.ok)throw new Error(t.status);return t.json()},t=(e,t)=>"C"===t?1.8*e+32:5/9*(e-32),n=(()=>{const n={};return{getForecast:()=>n,loadContents:async t=>{n.unit="C",n.city=t;try{const o=await e(t);return n.temp=o.main.temp-273.15,n.feelsLike=o.main.feels_like-273.15,n.humidity=o.main.humidity,n.icon=o.weather[0].icon,n.main=o.weather[0].main,n.country=o.sys.country,n.time=((e,t)=>{const n=new Date(1e3*e+1e3*t);return n.setHours(n.getHours()-5),n.setMinutes(n.getMinutes()-30),n.toLocaleTimeString()})(o.dt,o.timezone),n.tempMax=o.main.temp_max-273.15,n.tempMin=o.main.temp_min-273.15,n.humidity=o.main.humidity,n.windSpeed=o.wind.speed,!0}catch(e){return!1}},toggleUnit:()=>(n.temp=t(n.temp,n.unit),n.feelsLike=t(n.feelsLike,n.unit),n.tempMax=t(n.tempMax,n.unit),n.tempMin=t(n.tempMin,n.unit),n.unit="C"===n.unit?"F":"C",n.unit)}})();(()=>{const e=document.querySelector("input.city"),t=document.querySelector(".search-city"),o=document.querySelector(".error-msg"),i=document.querySelector(".main"),r=document.querySelector("body"),c=document.querySelector(".temperature"),a=document.querySelector(".feels-like-temp"),u=document.querySelector(".unit-selector"),m=document.querySelector(".weather-icon"),s=document.querySelector(".weather-main"),d=document.querySelector(".location-info > .city"),l=document.querySelector(".country"),y=document.querySelector(".time"),p=document.querySelector(".temp-max > .content"),h=document.querySelector(".temp-min > .content"),C=document.querySelector(".humidity > .content"),w=document.querySelector(".wind > .content"),S=e=>{e?(r.style.pointerEvents="none",i.classList.remove("loaded")):(i.classList.add("loaded"),r.style.pointerEvents="auto")},x=e=>{o.classList.add("show"),o.textContent=`* ${e}`},q=()=>{const e=n.getForecast();c.textContent=`${Math.round(e.temp)}`,a.textContent=`${Math.round(e.feelsLike)}째`,u.textContent=`째${e.unit}`,p.textContent=`${Math.round(e.tempMax)}째`,h.textContent=`${Math.round(e.tempMin)}째`},g=async()=>{const t=(()=>{let t=e.value.toLowerCase();return t&&(t=t[0].toUpperCase()+t.slice(1),e.value=""),t})();if(!t)return void x("Please Enter a City");S(!0);const i=await n.loadContents(t);S(!1),i?(()=>{o.classList.remove("show"),q();const e=n.getForecast();(e=>{const t=document.createElement("img");t.src=`http://openweathermap.org/img/wn/${e.icon}@4x.png`,m.childElementCount&&m.lastChild.remove(),m.appendChild(t)})(e),(e=>{s.textContent=e.main,d.textContent=`${e.city} ${e.country}`,l.textContent=e.country,y.textContent=e.time})(e),(e=>{C.textContent=`${e.humidity}%`,w.textContent=`${e.windSpeed} m/s`})(e)})():x("Location not found")},L=()=>{n.toggleUnit(),q()};return{init:()=>{e.value="London",g(),t.addEventListener("click",g),e.addEventListener("keyup",(({key:e})=>{"Enter"===e&&g()})),u.addEventListener("click",L)}}})().init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFxQkEsRUFia0JBLE1BQU9DLElBQ3JCLE1BQU1DLFFBQWlCQyxPQU5UQyxFQU1zQkgsRUFMeEIscURBQXFERyw0Q0FLbEIsQ0FBRUMsS0FBTSxTQU4xQyxJQUFDRCxFQU9kLElBQUtGLEVBQVNJLEdBQ1osTUFBTSxJQUFJQyxNQUFNTCxFQUFTTSxRQUUzQixPQUFPTixFQUFTTyxRQ1hkQyxFQUFhLENBQUNDLEVBQUtDLElBQ0gsTUFBaEJBLEVBQWtDLElBQU5ELEVBQWdCLEdBQzNCLEVBQUksR0FBakJBLEVBQU0sSUF3RGhCLEVBOUNpQixNQUNmLE1BQU1FLEVBQVcsR0FzQ2pCLE1BQU8sQ0FDTEMsWUFIa0IsSUFBTUQsRUFJeEJFLGFBdENtQmYsTUFBT0MsSUFDMUJZLEVBQVNHLEtBQU8sSUFDaEJILEVBQVNULEtBQU9ILEVBQ2hCLElBQ0UsTUFBTWdCLFFBQW9CLEVBQWdCaEIsR0FlMUMsT0FiQVksRUFBU0ssS0FBT0QsRUFBWUUsS0FBS0QsS0FBTyxPQUN4Q0wsRUFBU08sVUFBWUgsRUFBWUUsS0FBS0UsV0FBYSxPQUNuRFIsRUFBU1MsU0FBV0wsRUFBWUUsS0FBS0csU0FDckNULEVBQVNVLEtBQU9OLEVBQVlPLFFBQVEsR0FBR0QsS0FFdkNWLEVBQVNNLEtBQU9GLEVBQVlPLFFBQVEsR0FBR0wsS0FDdkNOLEVBQVNZLFFBQVVSLEVBQVlTLElBQUlELFFBQ25DWixFQUFTYyxLQXZCQyxFQUFDQyxFQUFJQyxLQUNuQixNQUFNQyxFQUFPLElBQUlDLEtBQVUsSUFBTEgsRUFBd0IsSUFBWEMsR0FHbkMsT0FGQUMsRUFBS0UsU0FBU0YsRUFBS0csV0FBYSxHQUNoQ0gsRUFBS0ksV0FBV0osRUFBS0ssYUFBZSxJQUM3QkwsRUFBS00sc0JBbUJRQyxDQUFRcEIsRUFBWVcsR0FBSVgsRUFBWVksVUFFcERoQixFQUFTeUIsUUFBVXJCLEVBQVlFLEtBQUtvQixTQUFXLE9BQy9DMUIsRUFBUzJCLFFBQVV2QixFQUFZRSxLQUFLc0IsU0FBVyxPQUMvQzVCLEVBQVNTLFNBQVdMLEVBQVlFLEtBQUtHLFNBQ3JDVCxFQUFTNkIsVUFBWXpCLEVBQVkwQixLQUFLQyxPQUMvQixFQUNQLE1BQU9DLEdBQ1AsT0FBTyxJQWtCVEMsV0FkaUIsS0FDakJqQyxFQUFTSyxLQUFPUixFQUFXRyxFQUFTSyxLQUFNTCxFQUFTRyxNQUNuREgsRUFBU08sVUFBWVYsRUFBV0csRUFBU08sVUFBV1AsRUFBU0csTUFDN0RILEVBQVN5QixRQUFVNUIsRUFBV0csRUFBU3lCLFFBQVN6QixFQUFTRyxNQUN6REgsRUFBUzJCLFFBQVU5QixFQUFXRyxFQUFTMkIsUUFBUzNCLEVBQVNHLE1BQ3pESCxFQUFTRyxLQUF5QixNQUFsQkgsRUFBU0csS0FBZSxJQUFNLElBQ3ZDSCxFQUFTRyxRQWxDSCxHQ1pOLE1BQ1QsTUFBTStCLEVBQWFDLFNBQVNDLGNBQWMsY0FDcENDLEVBQWFGLFNBQVNDLGNBQWMsZ0JBQ3BDRSxFQUFZSCxTQUFTQyxjQUFjLGNBQ25DRyxFQUFRSixTQUFTQyxjQUFjLFNBQy9CSSxFQUFPTCxTQUFTQyxjQUFjLFFBRTlCSyxFQUFRTixTQUFTQyxjQUFjLGdCQUMvQk0sRUFBaUJQLFNBQVNDLGNBQWMsb0JBQ3hDTyxFQUFnQlIsU0FBU0MsY0FBYyxrQkFDdkNRLEVBQWVULFNBQVNDLGNBQWMsaUJBRXRDUyxFQUFlVixTQUFTQyxjQUFjLGlCQUN0Q1UsRUFBUVgsU0FBU0MsY0FBYywwQkFDL0JXLEVBQVdaLFNBQVNDLGNBQWMsWUFDbENZLEVBQVFiLFNBQVNDLGNBQWMsU0FFL0JhLEVBQVdkLFNBQVNDLGNBQWMsd0JBQ2xDYyxFQUFXZixTQUFTQyxjQUFjLHdCQUNsQ2UsRUFBWWhCLFNBQVNDLGNBQWMsd0JBQ25DZ0IsRUFBYWpCLFNBQVNDLGNBQWMsb0JBV3BDaUIsRUFBV0MsSUFDWEEsR0FDRmQsRUFBS2UsTUFBTUMsY0FBZ0IsT0FDM0JqQixFQUFNa0IsVUFBVUMsT0FBTyxZQUV2Qm5CLEVBQU1rQixVQUFVRSxJQUFJLFVBQ3BCbkIsRUFBS2UsTUFBTUMsY0FBZ0IsU0FJekJJLEVBQWFDLElBQ2pCdkIsRUFBVW1CLFVBQVVFLElBQUksUUFDeEJyQixFQUFVd0IsWUFBYyxLQUFLRCxLQUd6QkUsRUFBdUIsS0FDM0IsTUFBTS9ELEVBQVcsZ0JBQ2pCeUMsRUFBTXFCLFlBQWMsR0FBR0UsS0FBS0MsTUFBTWpFLEVBQVNLLFFBQzNDcUMsRUFBZW9CLFlBQWMsR0FBR0UsS0FBS0MsTUFBTWpFLEVBQVNPLGNBQ3BEb0MsRUFBY21CLFlBQWMsSUFBSTlELEVBQVNHLE9BQ3pDOEMsRUFBU2EsWUFBYyxHQUFHRSxLQUFLQyxNQUFNakUsRUFBU3lCLFlBQzlDeUIsRUFBU1ksWUFBYyxHQUFHRSxLQUFLQyxNQUFNakUsRUFBUzJCLGFBK0IxQ3VDLEVBQWtCL0UsVUFDdEIsTUFBTUMsRUE5RGEsTUFDbkIsSUFBSUEsRUFBVzhDLEVBQVdpQyxNQUFNQyxjQUtoQyxPQUpJaEYsSUFDRkEsRUFBV0EsRUFBUyxHQUFHaUYsY0FBZ0JqRixFQUFTa0YsTUFBTSxHQUN0RHBDLEVBQVdpQyxNQUFRLElBRWQvRSxHQXdEVW1GLEdBQ2pCLElBQUtuRixFQUVILFlBREF3RSxFQUFVLHVCQUdaUCxHQUFRLEdBRVIsTUFBTW1CLFFBQVcsZUFBc0JwRixHQUN2Q2lFLEdBQVEsR0FDSG1CLEVBbkJXLE1BQ2hCbEMsRUFBVW1CLFVBQVVDLE9BQU8sUUFDM0JLLElBQ0EsTUFBTS9ELEVBQVcsZ0JBdEJPLENBQUNBLElBQ3pCLE1BQU15RSxFQUFjdEMsU0FBU3VDLGNBQWMsT0FDM0NELEVBQVlFLElBQU0sb0NBQW9DM0UsRUFBU1UsY0FDM0RrQyxFQUFhZ0MsbUJBQW1CaEMsRUFBYWlDLFVBQVVuQixTQUMzRGQsRUFBYWtDLFlBQVlMLElBbUJ6Qk0sQ0FBa0IvRSxHQWhCTSxDQUFDQSxJQUN6QjZDLEVBQWFpQixZQUFjOUQsRUFBU00sS0FDcEN3QyxFQUFNZ0IsWUFBYyxHQUFHOUQsRUFBU1QsUUFBUVMsRUFBU1ksVUFDakRtQyxFQUFTZSxZQUFjOUQsRUFBU1ksUUFDaENvQyxFQUFNYyxZQUFjOUQsRUFBU2MsTUFhN0JrRSxDQUFrQmhGLEdBVkcsQ0FBQ0EsSUFDdEJtRCxFQUFVVyxZQUFjLEdBQUc5RCxFQUFTUyxZQUNwQzJDLEVBQVdVLFlBQWMsR0FBRzlELEVBQVM2QixpQkFTckNvRCxDQUFlakYsSUFpQmZrRixHQUhFdEIsRUFBVSx1QkFNUjNCLEVBQWEsS0FDakIsZUFDQThCLEtBZUYsTUFBTyxDQUNMb0IsS0FiVyxLQUVYakQsRUFBV2lDLE1BQVEsU0FDbkJELElBRUE3QixFQUFXK0MsaUJBQWlCLFFBQVNsQixHQUNyQ2hDLEVBQVdrRCxpQkFBaUIsU0FBUyxFQUFHQyxJQUFBQSxNQUMxQixVQUFSQSxHQUFpQm5CLE9BRXZCdkIsRUFBY3lDLGlCQUFpQixRQUFTbkQsTUFsSGpDLEdDQVgsUSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL21vZHVsZXMvV2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9tb2R1bGVzL0ZvcmVjYXN0LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL21vZHVsZXMvVUkuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgV2VhdGhlciA9ICgoKSA9PiB7XG4gIGNvbnN0IGtleSA9ICcwYjk0YTg2YTdhYjcyODc5ODM5ZGU1YTcyNDY4NmM5Zic7XG5cbiAgY29uc3QgZ2V0VXJsID0gKGNpdHkpID0+IHtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JmFwcGlkPSR7a2V5fWA7XG4gICAgcmV0dXJuIHVybDtcbiAgfTtcblxuICBjb25zdCBnZXREYXRhID0gYXN5bmMgKGNpdHlOYW1lKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChnZXRVcmwoY2l0eU5hbWUpLCB7IG1vZGU6ICdjb3JzJyB9KTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGdldERhdGEsXG4gIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBXZWF0aGVyO1xuXG4vLyBTYW1wbGUgSnNvblxuLy9cbi8vIHtcbi8vICAgXCJjb29yZFwiOiB7XG4vLyAgICAgXCJsb25cIjogLTEyMi4wOCxcbi8vICAgICBcImxhdFwiOiAzNy4zOVxuLy8gICB9LFxuLy8gICBcIndlYXRoZXJcIjogW1xuLy8gICAgIHtcbi8vICAgICAgIFwiaWRcIjogODAwLFxuLy8gICAgICAgXCJtYWluXCI6IFwiQ2xlYXJcIixcbi8vICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJjbGVhciBza3lcIixcbi8vICAgICAgIFwiaWNvblwiOiBcIjAxZFwiXG4vLyAgICAgfVxuLy8gICBdLFxuLy8gICBcImJhc2VcIjogXCJzdGF0aW9uc1wiLFxuLy8gICBcIm1haW5cIjoge1xuLy8gICAgIFwidGVtcFwiOiAyODIuNTUsXG4vLyAgICAgXCJmZWVsc19saWtlXCI6IDI4MS44Nixcbi8vICAgICBcInRlbXBfbWluXCI6IDI4MC4zNyxcbi8vICAgICBcInRlbXBfbWF4XCI6IDI4NC4yNixcbi8vICAgICBcInByZXNzdXJlXCI6IDEwMjMsXG4vLyAgICAgXCJodW1pZGl0eVwiOiAxMDBcbi8vICAgfSxcbi8vICAgXCJ2aXNpYmlsaXR5XCI6IDE2MDkzLFxuLy8gICBcIndpbmRcIjoge1xuLy8gICAgIFwic3BlZWRcIjogMS41LFxuLy8gICAgIFwiZGVnXCI6IDM1MFxuLy8gICB9LFxuLy8gICBcImNsb3Vkc1wiOiB7XG4vLyAgICAgXCJhbGxcIjogMVxuLy8gICB9LFxuLy8gICBcImR0XCI6IDE1NjAzNTA2NDUsXG4vLyAgIFwic3lzXCI6IHtcbi8vICAgICBcInR5cGVcIjogMSxcbi8vICAgICBcImlkXCI6IDUxMjIsXG4vLyAgICAgXCJtZXNzYWdlXCI6IDAuMDEzOSxcbi8vICAgICBcImNvdW50cnlcIjogXCJVU1wiLFxuLy8gICAgIFwic3VucmlzZVwiOiAxNTYwMzQzNjI3LFxuLy8gICAgIFwic3Vuc2V0XCI6IDE1NjAzOTY1NjNcbi8vICAgfSxcbi8vICAgXCJ0aW1lem9uZVwiOiAtMjUyMDAsXG4vLyAgIFwiaWRcIjogNDIwMDA2MzUzLFxuLy8gICBcIm5hbWVcIjogXCJNb3VudGFpbiBWaWV3XCIsXG4vLyAgIFwiY29kXCI6IDIwMFxuLy8gICB9XG4iLCJpbXBvcnQgV2VhdGhlciBmcm9tICcuL1dlYXRoZXInO1xuXG5jb25zdCBjaGFuZ2VVbml0ID0gKG51bSwgY3VycmVudFVuaXQpID0+IHtcbiAgaWYgKGN1cnJlbnRVbml0ID09PSAnQycpIHJldHVybiBudW0gKiAoOSAvIDUpICsgMzI7XG4gIHJldHVybiAobnVtIC0gMzIpICogKDUgLyA5KTtcbn07XG5cbmNvbnN0IGdldERhdGUgPSAoZHQsIHRpbWV6b25lKSA9PiB7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkdCAqIDEwMDAgKyAodGltZXpvbmUgKiAxMDAwKSk7XG4gIGRhdGUuc2V0SG91cnMoZGF0ZS5nZXRIb3VycygpIC0gNSk7XG4gIGRhdGUuc2V0TWludXRlcyhkYXRlLmdldE1pbnV0ZXMoKSAtIDMwKTtcbiAgcmV0dXJuIGRhdGUudG9Mb2NhbGVUaW1lU3RyaW5nKCk7XG59O1xuXG5jb25zdCBGb3JlY2FzdCA9ICgoKSA9PiB7XG4gIGNvbnN0IGZvcmVjYXN0ID0ge307XG5cbiAgY29uc3QgbG9hZENvbnRlbnRzID0gYXN5bmMgKGNpdHlOYW1lKSA9PiB7XG4gICAgZm9yZWNhc3QudW5pdCA9ICdDJztcbiAgICBmb3JlY2FzdC5jaXR5ID0gY2l0eU5hbWU7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgV2VhdGhlci5nZXREYXRhKGNpdHlOYW1lKTtcbiAgICAgIC8vIHRlbXAtaW5mb1xuICAgICAgZm9yZWNhc3QudGVtcCA9IHdlYXRoZXJEYXRhLm1haW4udGVtcCAtIDI3My4xNTtcbiAgICAgIGZvcmVjYXN0LmZlZWxzTGlrZSA9IHdlYXRoZXJEYXRhLm1haW4uZmVlbHNfbGlrZSAtIDI3My4xNTtcbiAgICAgIGZvcmVjYXN0Lmh1bWlkaXR5ID0gd2VhdGhlckRhdGEubWFpbi5odW1pZGl0eTtcbiAgICAgIGZvcmVjYXN0Lmljb24gPSB3ZWF0aGVyRGF0YS53ZWF0aGVyWzBdLmljb247XG4gICAgICAvLyBsb2NhdGlvbi1pbmZvXG4gICAgICBmb3JlY2FzdC5tYWluID0gd2VhdGhlckRhdGEud2VhdGhlclswXS5tYWluO1xuICAgICAgZm9yZWNhc3QuY291bnRyeSA9IHdlYXRoZXJEYXRhLnN5cy5jb3VudHJ5O1xuICAgICAgZm9yZWNhc3QudGltZSA9IGdldERhdGUod2VhdGhlckRhdGEuZHQsIHdlYXRoZXJEYXRhLnRpbWV6b25lKTtcbiAgICAgIC8vIGV4dHJhLWluZm9cbiAgICAgIGZvcmVjYXN0LnRlbXBNYXggPSB3ZWF0aGVyRGF0YS5tYWluLnRlbXBfbWF4IC0gMjczLjE1O1xuICAgICAgZm9yZWNhc3QudGVtcE1pbiA9IHdlYXRoZXJEYXRhLm1haW4udGVtcF9taW4gLSAyNzMuMTU7XG4gICAgICBmb3JlY2FzdC5odW1pZGl0eSA9IHdlYXRoZXJEYXRhLm1haW4uaHVtaWRpdHk7XG4gICAgICBmb3JlY2FzdC53aW5kU3BlZWQgPSB3ZWF0aGVyRGF0YS53aW5kLnNwZWVkO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHRvZ2dsZVVuaXQgPSAoKSA9PiB7XG4gICAgZm9yZWNhc3QudGVtcCA9IGNoYW5nZVVuaXQoZm9yZWNhc3QudGVtcCwgZm9yZWNhc3QudW5pdCk7XG4gICAgZm9yZWNhc3QuZmVlbHNMaWtlID0gY2hhbmdlVW5pdChmb3JlY2FzdC5mZWVsc0xpa2UsIGZvcmVjYXN0LnVuaXQpO1xuICAgIGZvcmVjYXN0LnRlbXBNYXggPSBjaGFuZ2VVbml0KGZvcmVjYXN0LnRlbXBNYXgsIGZvcmVjYXN0LnVuaXQpO1xuICAgIGZvcmVjYXN0LnRlbXBNaW4gPSBjaGFuZ2VVbml0KGZvcmVjYXN0LnRlbXBNaW4sIGZvcmVjYXN0LnVuaXQpO1xuICAgIGZvcmVjYXN0LnVuaXQgPSBmb3JlY2FzdC51bml0ID09PSAnQycgPyAnRicgOiAnQyc7XG4gICAgcmV0dXJuIGZvcmVjYXN0LnVuaXQ7XG4gIH07XG5cbiAgY29uc3QgZ2V0Rm9yZWNhc3QgPSAoKSA9PiBmb3JlY2FzdDtcblxuICByZXR1cm4ge1xuICAgIGdldEZvcmVjYXN0LFxuICAgIGxvYWRDb250ZW50cyxcbiAgICB0b2dnbGVVbml0LFxuICB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgRm9yZWNhc3Q7XG4iLCJpbXBvcnQgRm9yZWNhc3QgZnJvbSAnLi9Gb3JlY2FzdCc7XG5cbmNvbnN0IFVJID0gKCgpID0+IHtcbiAgY29uc3QgJGNpdHlJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0LmNpdHknKTtcbiAgY29uc3QgJHNlYXJjaEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtY2l0eScpO1xuICBjb25zdCAkZXJyb3JNc2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZXJyb3ItbXNnJyk7XG4gIGNvbnN0ICRtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4nKTtcbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbiAgLy8gdGVtcC1pbmZvXG4gIGNvbnN0ICR0ZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlbXBlcmF0dXJlJyk7XG4gIGNvbnN0ICRmZWVsc0xpa2VUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZlZWxzLWxpa2UtdGVtcCcpO1xuICBjb25zdCAkdW5pdFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVuaXQtc2VsZWN0b3InKTtcbiAgY29uc3QgJHdlYXRoZXJJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlYXRoZXItaWNvbicpO1xuICAvLyBsb2NhdGlvbi1pbmZvXG4gIGNvbnN0ICR3ZWF0aGVyTWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53ZWF0aGVyLW1haW4nKTtcbiAgY29uc3QgJGNpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9jYXRpb24taW5mbyA+IC5jaXR5Jyk7XG4gIGNvbnN0ICRjb3VudHJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvdW50cnknKTtcbiAgY29uc3QgJHRpbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGltZScpO1xuICAvLyBleHRyYS1pbmZvXG4gIGNvbnN0ICR0ZW1wTWF4ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlbXAtbWF4ID4gLmNvbnRlbnQnKTtcbiAgY29uc3QgJHRlbXBNaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGVtcC1taW4gPiAuY29udGVudCcpO1xuICBjb25zdCAkaHVtaWRpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaHVtaWRpdHkgPiAuY29udGVudCcpO1xuICBjb25zdCAkd2luZFNwZWVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndpbmQgPiAuY29udGVudCcpO1xuXG4gIGNvbnN0IGdldENpdHlJbnB1dCA9ICgpID0+IHtcbiAgICBsZXQgY2l0eU5hbWUgPSAkY2l0eUlucHV0LnZhbHVlLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGNpdHlOYW1lKSB7XG4gICAgICBjaXR5TmFtZSA9IGNpdHlOYW1lWzBdLnRvVXBwZXJDYXNlKCkgKyBjaXR5TmFtZS5zbGljZSgxKTtcbiAgICAgICRjaXR5SW5wdXQudmFsdWUgPSAnJztcbiAgICB9XG4gICAgcmV0dXJuIGNpdHlOYW1lO1xuICB9O1xuXG4gIGNvbnN0IGxvYWRpbmcgPSAoYmVnaW4pID0+IHtcbiAgICBpZiAoYmVnaW4pIHtcbiAgICAgIGJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcbiAgICAgICRtYWluLmNsYXNzTGlzdC5yZW1vdmUoJ2xvYWRlZCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkbWFpbi5jbGFzc0xpc3QuYWRkKCdsb2FkZWQnKTtcbiAgICAgIGJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdhdXRvJztcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2hvd0Vycm9yID0gKG1zZykgPT4ge1xuICAgICRlcnJvck1zZy5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG4gICAgJGVycm9yTXNnLnRleHRDb250ZW50ID0gYCogJHttc2d9YDtcbiAgfTtcblxuICBjb25zdCB1cGRhdGVUZW1wZXJhdHVyZURPTSA9ICgpID0+IHtcbiAgICBjb25zdCBmb3JlY2FzdCA9IEZvcmVjYXN0LmdldEZvcmVjYXN0KCk7XG4gICAgJHRlbXAudGV4dENvbnRlbnQgPSBgJHtNYXRoLnJvdW5kKGZvcmVjYXN0LnRlbXApfWA7XG4gICAgJGZlZWxzTGlrZVRlbXAudGV4dENvbnRlbnQgPSBgJHtNYXRoLnJvdW5kKGZvcmVjYXN0LmZlZWxzTGlrZSl9wrBgO1xuICAgICR1bml0U2VsZWN0b3IudGV4dENvbnRlbnQgPSBgwrAke2ZvcmVjYXN0LnVuaXR9YDtcbiAgICAkdGVtcE1heC50ZXh0Q29udGVudCA9IGAke01hdGgucm91bmQoZm9yZWNhc3QudGVtcE1heCl9wrBgO1xuICAgICR0ZW1wTWluLnRleHRDb250ZW50ID0gYCR7TWF0aC5yb3VuZChmb3JlY2FzdC50ZW1wTWluKX3CsGA7XG4gIH07XG5cbiAgY29uc3QgdXBkYXRlV2VhdGhlckljb24gPSAoZm9yZWNhc3QpID0+IHtcbiAgICBjb25zdCB3ZWF0aGVySWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIHdlYXRoZXJJY29uLnNyYyA9IGBodHRwOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93bi8ke2ZvcmVjYXN0Lmljb259QDR4LnBuZ2A7XG4gICAgaWYgKCR3ZWF0aGVySWNvbi5jaGlsZEVsZW1lbnRDb3VudCkgJHdlYXRoZXJJY29uLmxhc3RDaGlsZC5yZW1vdmUoKTtcbiAgICAkd2VhdGhlckljb24uYXBwZW5kQ2hpbGQod2VhdGhlckljb24pO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZUxvY2F0aW9uRE9NID0gKGZvcmVjYXN0KSA9PiB7XG4gICAgJHdlYXRoZXJNYWluLnRleHRDb250ZW50ID0gZm9yZWNhc3QubWFpbjtcbiAgICAkY2l0eS50ZXh0Q29udGVudCA9IGAke2ZvcmVjYXN0LmNpdHl9ICR7Zm9yZWNhc3QuY291bnRyeX1gO1xuICAgICRjb3VudHJ5LnRleHRDb250ZW50ID0gZm9yZWNhc3QuY291bnRyeTtcbiAgICAkdGltZS50ZXh0Q29udGVudCA9IGZvcmVjYXN0LnRpbWU7XG4gIH07XG5cbiAgY29uc3QgdXBkYXRlRXh0cmFET00gPSAoZm9yZWNhc3QpID0+IHtcbiAgICAkaHVtaWRpdHkudGV4dENvbnRlbnQgPSBgJHtmb3JlY2FzdC5odW1pZGl0eX0lYDtcbiAgICAkd2luZFNwZWVkLnRleHRDb250ZW50ID0gYCR7Zm9yZWNhc3Qud2luZFNwZWVkfSBtL3NgO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZURPTSA9ICgpID0+IHtcbiAgICAkZXJyb3JNc2cuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuICAgIHVwZGF0ZVRlbXBlcmF0dXJlRE9NKCk7XG4gICAgY29uc3QgZm9yZWNhc3QgPSBGb3JlY2FzdC5nZXRGb3JlY2FzdCgpO1xuICAgIHVwZGF0ZVdlYXRoZXJJY29uKGZvcmVjYXN0KTtcbiAgICB1cGRhdGVMb2NhdGlvbkRPTShmb3JlY2FzdCk7XG4gICAgdXBkYXRlRXh0cmFET00oZm9yZWNhc3QpO1xuICB9O1xuXG4gIGNvbnN0IHBvcHVsYXRlV2VhdGhlciA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBjaXR5TmFtZSA9IGdldENpdHlJbnB1dCgpO1xuICAgIGlmICghY2l0eU5hbWUpIHtcbiAgICAgIHNob3dFcnJvcignUGxlYXNlIEVudGVyIGEgQ2l0eScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsb2FkaW5nKHRydWUpO1xuICAgIC8vIFdhaXQgZm9yIGRhdGEgYmVpbmcgZmV0Y2hlZFxuICAgIGNvbnN0IE9LID0gYXdhaXQgRm9yZWNhc3QubG9hZENvbnRlbnRzKGNpdHlOYW1lKTtcbiAgICBsb2FkaW5nKGZhbHNlKTtcbiAgICBpZiAoIU9LKSB7XG4gICAgICBzaG93RXJyb3IoJ0xvY2F0aW9uIG5vdCBmb3VuZCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB1cGRhdGVET00oKTtcbiAgfTtcblxuICBjb25zdCB0b2dnbGVVbml0ID0gKCkgPT4ge1xuICAgIEZvcmVjYXN0LnRvZ2dsZVVuaXQoKTtcbiAgICB1cGRhdGVUZW1wZXJhdHVyZURPTSgpO1xuICB9O1xuXG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgLy8gU2FtcGxlIFZhbHVlXG4gICAgJGNpdHlJbnB1dC52YWx1ZSA9ICdMb25kb24nO1xuICAgIHBvcHVsYXRlV2VhdGhlcigpO1xuXG4gICAgJHNlYXJjaEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHBvcHVsYXRlV2VhdGhlcik7XG4gICAgJGNpdHlJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsICh7IGtleSB9KSA9PiB7XG4gICAgICBpZiAoa2V5ID09PSAnRW50ZXInKSBwb3B1bGF0ZVdlYXRoZXIoKTtcbiAgICB9KTtcbiAgICAkdW5pdFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlVW5pdCk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBpbml0LFxuICB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgVUk7XG4iLCJpbXBvcnQgVUkgZnJvbSAnLi9tb2R1bGVzL1VJJztcblxuVUkuaW5pdCgpO1xuIl0sIm5hbWVzIjpbImFzeW5jIiwiY2l0eU5hbWUiLCJyZXNwb25zZSIsImZldGNoIiwiY2l0eSIsIm1vZGUiLCJvayIsIkVycm9yIiwic3RhdHVzIiwianNvbiIsImNoYW5nZVVuaXQiLCJudW0iLCJjdXJyZW50VW5pdCIsImZvcmVjYXN0IiwiZ2V0Rm9yZWNhc3QiLCJsb2FkQ29udGVudHMiLCJ1bml0Iiwid2VhdGhlckRhdGEiLCJ0ZW1wIiwibWFpbiIsImZlZWxzTGlrZSIsImZlZWxzX2xpa2UiLCJodW1pZGl0eSIsImljb24iLCJ3ZWF0aGVyIiwiY291bnRyeSIsInN5cyIsInRpbWUiLCJkdCIsInRpbWV6b25lIiwiZGF0ZSIsIkRhdGUiLCJzZXRIb3VycyIsImdldEhvdXJzIiwic2V0TWludXRlcyIsImdldE1pbnV0ZXMiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJnZXREYXRlIiwidGVtcE1heCIsInRlbXBfbWF4IiwidGVtcE1pbiIsInRlbXBfbWluIiwid2luZFNwZWVkIiwid2luZCIsInNwZWVkIiwiZXJyIiwidG9nZ2xlVW5pdCIsIiRjaXR5SW5wdXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCIkc2VhcmNoQnRuIiwiJGVycm9yTXNnIiwiJG1haW4iLCJib2R5IiwiJHRlbXAiLCIkZmVlbHNMaWtlVGVtcCIsIiR1bml0U2VsZWN0b3IiLCIkd2VhdGhlckljb24iLCIkd2VhdGhlck1haW4iLCIkY2l0eSIsIiRjb3VudHJ5IiwiJHRpbWUiLCIkdGVtcE1heCIsIiR0ZW1wTWluIiwiJGh1bWlkaXR5IiwiJHdpbmRTcGVlZCIsImxvYWRpbmciLCJiZWdpbiIsInN0eWxlIiwicG9pbnRlckV2ZW50cyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInNob3dFcnJvciIsIm1zZyIsInRleHRDb250ZW50IiwidXBkYXRlVGVtcGVyYXR1cmVET00iLCJNYXRoIiwicm91bmQiLCJwb3B1bGF0ZVdlYXRoZXIiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwidG9VcHBlckNhc2UiLCJzbGljZSIsImdldENpdHlJbnB1dCIsIk9LIiwid2VhdGhlckljb24iLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiY2hpbGRFbGVtZW50Q291bnQiLCJsYXN0Q2hpbGQiLCJhcHBlbmRDaGlsZCIsInVwZGF0ZVdlYXRoZXJJY29uIiwidXBkYXRlTG9jYXRpb25ET00iLCJ1cGRhdGVFeHRyYURPTSIsInVwZGF0ZURPTSIsImluaXQiLCJhZGRFdmVudExpc3RlbmVyIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==