(()=>{"use strict";const e=async e=>{const t=await fetch((n=e,`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=0b94a86a7ab72879839de5a724686c9f`),{mode:"cors"});var n;if(!t.ok)throw new Error(t.status);return t.json()},t=(e,t)=>"C"===t?1.8*e+32:5/9*(e-32),n=(()=>{const n={};return{getForecast:()=>n,loadContents:async t=>{n.unit="C",n.city=t;try{const o=await e(t);return n.temp=o.main.temp-273.15,n.feelsLike=o.main.feels_like-273.15,n.humidity=o.main.humidity,n.icon=o.weather[0].icon,n.main=o.weather[0].main,n.country=o.sys.country,n.time=((e,t)=>{const n=new Date(1e3*e+1e3*t);return n.setHours(n.getHours()-5),n.setMinutes(n.getMinutes()-30),n.toLocaleTimeString()})(o.dt,o.timezone),n.tempMax=o.main.temp_max-273.15,n.tempMin=o.main.temp_min-273.15,n.humidity=o.main.humidity,n.windSpeed=o.wind.speed,!0}catch(e){return!1}},toggleUnit:()=>(n.temp=t(n.temp,n.unit),n.feelsLike=t(n.feelsLike,n.unit),n.tempMax=t(n.tempMax,n.unit),n.tempMin=t(n.tempMin,n.unit),n.unit="C"===n.unit?"F":"C",n.unit)}})();(()=>{const e=document.querySelector("input.city"),t=document.querySelector(".search-city"),o=document.querySelector(".error-msg"),r=document.querySelector(".main"),i=document.querySelector("body"),c=document.querySelector(".temperature"),u=document.querySelector(".feels-like-temp"),a=document.querySelector(".unit-selector"),m=document.querySelector(".weather-icon"),s=document.querySelector(".weather-main"),d=document.querySelector(".location-info > .city"),l=document.querySelector(".country"),y=document.querySelector(".time"),p=document.querySelector(".temp-max > .content"),h=document.querySelector(".temp-min > .content"),C=document.querySelector(".humidity > .content"),S=document.querySelector(".wind > .content"),w=e=>{e?(i.style.pointerEvents="none",r.classList.remove("loaded")):(r.classList.add("loaded"),i.style.pointerEvents="auto")},x=e=>{o.textContent=`* ${e}`},q=()=>{const e=n.getForecast();c.textContent=`${Math.round(e.temp)}`,u.textContent=`${Math.round(e.feelsLike)}째`,a.textContent=`째${e.unit}`,p.textContent=`${Math.round(e.tempMax)}째`,h.textContent=`${Math.round(e.tempMin)}째`},g=async()=>{const t=(()=>{let t=e.value.toLowerCase();return t&&(t=t[0].toUpperCase()+t.slice(1),e.value=""),t})();if(!t)return void x("Please Enter a City");w(!0);const o=await n.loadContents(t);w(!1),o?(()=>{q();const e=n.getForecast();(e=>{const t=document.createElement("img");t.src=`http://openweathermap.org/img/wn/${e.icon}@4x.png`,m.childElementCount&&m.lastChild.remove(),m.appendChild(t)})(e),(e=>{s.textContent=e.main,d.textContent=`${e.city} ${e.country}`,l.textContent=e.country,y.textContent=e.time})(e),(e=>{C.textContent=`${e.humidity}%`,S.textContent=`${e.windSpeed} m/s`})(e)})():x("Location not found")},M=()=>{n.toggleUnit(),q()};return{init:()=>{e.value="London",g(),t.addEventListener("click",g),e.addEventListener("keyup",(({key:e})=>{"Enter"===e&&g()})),a.addEventListener("click",M)}}})().init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,